{"version":3,"sources":["components/Form.js","components/Item.js","components/ListItems.js","components/ButtonRemoveAll.js","components/App.js","serviceWorker.js","index.js"],"names":["Form","_ref","change","title","price","click","categories","select","react_default","a","createElement","action","className","htmlFor","type","id","name","onChange","value","onClick","Item","category","currentDate","data-id","concat","ListItems","allExpenses","expenses","map","expense","src_components_Item","key","ButtonRemoveAll","App","state","isActivePanel","handleChangeInput","e","target","parseFloat","_this","setState","Object","defineProperty","handleEditChangeInput","currentId","parentElement","dataset","index","findIndex","editExpense","toConsumableArray","classList","add","remove","handleClickButton","preventDefault","idExpense","length","allId","date","Date","toLocaleString","prevState","handleChangeSelect","handleClickButtonRemove","element","filter","el","handleClickButtonRemoveAll","localStorage","getItem","JSON","parse","this","stringify","setItem","theSumOfExpenses","reduce","prevVal","currentVal","toFixed","Fragment","src_components_Form","src_components_ButtonRemoveAll","src_components_ListItems","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d52e438.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = ({ change, title, price, click, categories, select }) => {\r\n  return (\r\n    <form action=\"\" className=\"form\">\r\n      <div className=\"form__field\">\r\n        <label htmlFor=\"name\">Nazwa</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"title\"\r\n          onChange={change}\r\n          value={title}\r\n        />\r\n      </div>\r\n      <div className=\"form__field\">\r\n        <label htmlFor=\"price\">Kwota </label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"price\"\r\n          name=\"price\"\r\n          onChange={change}\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form__field\">\r\n        <label htmlFor=\"categories\">Kategoria</label>\r\n        <select\r\n          name=\"categories\"\r\n          id=\"categories\"\r\n          value={categories}\r\n          onChange={select}\r\n        >\r\n          <option value=\"Żywność\">Żywność</option>\r\n          <option value=\"Opłaty\">Opłaty</option>\r\n          <option value=\"Jedzenie na mieście\">Jedzenie na mieście</option>\r\n          <option value=\"Kredyt\">Kredyt</option>\r\n          <option value=\"Inna\">Inna</option>\r\n        </select>\r\n      </div>\r\n      <button onClick={click} className=\"form__button\" title=\"dodaj wydatek\">\r\n        +\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./Item.css\";\r\n\r\nconst Item = ({ title, price, category, id, currentDate, click, change }) => {\r\n  return (\r\n    <li className=\"item\" data-id={id}>\r\n      <input\r\n        name=\"title\"\r\n        className={`item__title ${title === \"\" ? \"item--danger\" : \"\"}`}\r\n        value={title}\r\n        onChange={change}\r\n      />\r\n      <input\r\n        name=\"price\"\r\n        className={`item__price ${price === \"\" ? \"item--danger\" : \"\"}`}\r\n        value={price}\r\n        onChange={change}\r\n      />\r\n      <p className=\"item__category\">{category}</p>\r\n      <p className=\"item__date\">{currentDate}</p>\r\n      <button className=\"close\" title=\"usuń wydatek\" onClick={click}>\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"./Item\";\r\nimport \"./ListItems.css\";\r\n\r\nconst ListItems = ({ allExpenses, click, change }) => {\r\n  const expenses = allExpenses.map(expense => (\r\n    <Item\r\n      key={expense.id}\r\n      title={expense.title}\r\n      price={expense.price}\r\n      category={expense.category}\r\n      id={expense.id}\r\n      currentDate={expense.currentDate}\r\n      click={click}\r\n      change={change}\r\n    />\r\n  ));\r\n  return <ul>{expenses}</ul>;\r\n};\r\n\r\nexport default ListItems;\r\n","import React from \"react\";\r\nimport \"./ButtonRemoveAll.css\";\r\n\r\nconst ButtonRemoveAll = ({ click }) => {\r\n  return (\r\n    <button className=\"btn-remove\" onClick={click}>\r\n      Usuń wszystkie\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonRemoveAll;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"./Form\";\nimport ListItems from \"./ListItems\";\nimport ButtonRemoveAll from \"./ButtonRemoveAll\";\n\nclass App extends Component {\n  state = {\n    title: \"\",\n    price: \"\",\n    isActivePanel: false,\n    allExpenses: [],\n    category: \"Żywność\"\n  };\n  handleChangeInput = e => {\n    const value =\n      e.target.name === \"price\" ? parseFloat(e.target.value) : e.target.value;\n    this.setState({\n      [e.target.name]: value\n    });\n  };\n  handleEditChangeInput = e => {\n    const currentId = parseFloat(e.target.parentElement.dataset.id);\n    const index = this.state.allExpenses.findIndex(\n      expense => expense.id === currentId\n    );\n    const editExpense = [...this.state.allExpenses][index];\n\n    if (e.target.name === \"title\") {\n      editExpense[e.target.name] = e.target.value;\n    } else {\n      editExpense[e.target.name] = parseFloat(e.target.value) || \"\";\n    }\n\n    if (e.target.value === \"\" || parseFloat(e.target.value) < 1) {\n      e.target.classList.add(\"item--danger\");\n    } else {\n      e.target.classList.remove(\"item--danger\");\n    }\n\n    const allExpenses = [...this.state.allExpenses];\n    allExpenses[index] = editExpense;\n    this.setState({\n      allExpenses\n    });\n  };\n  handleClickButton = e => {\n    e.preventDefault();\n    if (this.state.price > 0 && this.state.title) {\n      let idExpense;\n      if (this.state.allExpenses.length) {\n        const allId = this.state.allExpenses.map(expense => expense.id);\n        idExpense = allId[allId.length - 1] + 1;\n      } else {\n        idExpense = this.state.allExpenses.length + 1;\n      }\n      const date = new Date().toLocaleString();\n\n      const expense = {\n        id: idExpense,\n        title: this.state.title,\n        price: this.state.price,\n        category: this.state.category,\n        currentDate: date\n      };\n      const allExpenses = [...this.state.allExpenses, expense];\n      this.setState(prevState => ({\n        allExpenses,\n        title: \"\",\n        price: \"\",\n        isActivePanel: true\n      }));\n    }\n  };\n  handleChangeSelect = e => {\n    this.setState({\n      category: e.target.value\n    });\n  };\n  handleClickButtonRemove = e => {\n    const element = parseFloat(e.target.parentElement.dataset.id);\n    const allExpenses = this.state.allExpenses.filter(el => el.id !== element);\n    if (!allExpenses.length) {\n      this.setState({\n        isActivePanel: false\n      });\n    }\n    this.setState({\n      allExpenses\n    });\n  };\n  handleClickButtonRemoveAll = () => {\n    this.setState({\n      allExpenses: [],\n      isActivePanel: false\n    });\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"expenses\")) {\n      const allExpenses = JSON.parse(localStorage.getItem(\"expenses\"));\n      this.setState({\n        allExpenses,\n        isActivePanel: true\n      });\n    }\n  }\n  componentDidUpdate() {\n    const allExpenses = JSON.stringify(this.state.allExpenses);\n    localStorage.setItem(\"expenses\", allExpenses);\n  }\n  render() {\n    const theSumOfExpenses = this.state.allExpenses\n      .map(expense => expense.price !== \"\" && expense.price)\n      .reduce((prevVal, currentVal) => prevVal + currentVal, 0)\n      .toFixed(2);\n\n    return (\n      <>\n        <div className=\"sticky\">\n          <h1>Kalkulator wydatków</h1>\n          <Form\n            change={this.handleChangeInput}\n            title={this.state.title}\n            price={this.state.price}\n            click={this.handleClickButton}\n            categories={this.state.categories}\n            select={this.handleChangeSelect}\n          />\n          <div className=\"sticky__wrapper\">\n            {<p>Razem: {theSumOfExpenses} zł</p>}\n            {this.state.allExpenses.length > 0 && (\n              <ButtonRemoveAll click={this.handleClickButtonRemoveAll} />\n            )}\n          </div>\n        </div>\n        <div className=\"panel\">\n          {this.state.isActivePanel ? (\n            <ListItems\n              allExpenses={this.state.allExpenses}\n              click={this.handleClickButtonRemove}\n              change={this.handleEditChangeInput}\n            />\n          ) : (\n            <p>brak wydatków</p>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}